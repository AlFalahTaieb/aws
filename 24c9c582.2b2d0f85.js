(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{123:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),s=p(a),d=n,u=s["".concat(i,".").concat(d)]||s[d]||m[d]||l;return a?r.a.createElement(u,o(o({ref:t},c),{},{components:a})):r.a.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},186:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dynamo1-f33c9a1b2ba97554bebcfb03972ee14b.png"},187:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dynamo2-235adc0348c914fa7bf31ce4e9021fcc.png"},188:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dynamo3-4a66a61696304117d8d9c18be1d06001.png"},189:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dynamo4-6cc031c0a9e7b92ea1b81cf1823461e4.png"},190:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/dynamo5-061b73b12638ef822c31f50fc692930c.png"},75:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"Quote",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),l=(a(0),a(123)),i={id:"notes_dynamodb",title:"DynamoDB",sidebar_label:"DynamoDB",author:"Taieb"},o={unversionedId:"notes_dynamodb",id:"notes_dynamodb",isDocsHomePage:!1,title:"DynamoDB",description:"export const Quote = ({ children, color }) => (",source:"@site/docs/notes_dynamodb.mdx",slug:"/notes_dynamodb",permalink:"/aws/docs/notes_dynamodb",version:"current",sidebar_label:"DynamoDB",sidebar:"someSidebar",previous:{title:"Lambda",permalink:"/aws/docs/notes_lambda"},next:{title:"API Gateway",permalink:"/aws/docs/notes_apig"}},b=[{value:"I. Introduction",id:"i-introduction",children:[]},{value:"II. Advanced features",id:"ii-advanced-features",children:[]},{value:"III. DynamoDB for SA",id:"iii-dynamodb-for-sa",children:[]},{value:"IV. DynamoDB Tips",id:"iv-dynamodb-tips",children:[]},{value:"RDS vs DynamoDB",id:"rds-vs-dynamodb",children:[]}],c=function(e){var t=e.children;e.color;return Object(l.b)("span",{style:{backgroundColor:"#5a5a5a",borderRadius:"8px",color:"#FF9900",padding:"0.21rem"}},t)},p={rightToc:b,Quote:c};function s(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"i-introduction"},"I. Introduction"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Fast and flexible NoSQL solution with ultra low latency")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Fully managed, supports both document and key-value models"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Stored on SSD")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Eventual consistency (by default, >1s)")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Can enable strongly consistent (never a dirty read, <1s)")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Default replication across three AZs"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Millions of requests/s, trillions of rows, 100s of TBs of storage"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Enables event-driven programming with DynamoDB streams")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Can only query on primary key, sort key or indices")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"DynamoDB has tables, each table can have infinite items (aka rows)"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Each item has attributes (can be null)"),Object(l.b)("li",{parentName:"ol"},"Max size of an item is 400KB"),Object(l.b)("li",{parentName:"ol"},"Data types supported include",Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Scalar: String, Number, Binary, Boolean, null"),Object(l.b)("li",{parentName:"ol"},"Document: List, Map"),Object(l.b)("li",{parentName:"ol"},"Set: String set, Number set, Binary set"))))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Provisioned throughput"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Table must have provisioned read and write capacity units"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Read Capacity Unit (RCU): $0.00013 per RCU"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"1 RCU = 1 strongly consistent read of 4 KB/s"),Object(l.b)("li",{parentName:"ol"},"1 RCU = 2 eventually consistent read of 4 KB/s "))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Write Capacity Unit (WCU): $0.00065 per WCU"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"1 WCU = 1 write of 1 KB/s "))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"RCU and WCU are decoupled and can be scaled independetly.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Option to set up auto-scaling to meet demand.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Throughput can be exceeded using burst credit. If no burst credit available, you'll get a ",Object(l.b)("inlineCode",{parentName:"p"},"ProvisionedThroughputException"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"As you surpass the write capacity, the requests will be throttled, and fail with an HTTP 400 code (Bad Request) and a ",Object(l.b)("inlineCode",{parentName:"p"},"ProvisionedThroughputExceededException")))))),Object(l.b)("h2",{id:"ii-advanced-features"},"II. Advanced features"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"DAX = DynamoDB accelerator",Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Seamless cache for DynamoDB, no application re-write"),Object(l.b)("li",{parentName:"ol"},"Fully-managed and highly available"),Object(l.b)("li",{parentName:"ol"},"Writes go through DAX to DynamoDB"),Object(l.b)("li",{parentName:"ol"},"Micro-second latency for cached reads and queries"),Object(l.b)("li",{parentName:"ol"},"Solves the hotkey problem (too many reads)"),Object(l.b)("li",{parentName:"ol"},"Each cache entry has TTL of 5 minutes by default"),Object(l.b)("li",{parentName:"ol"},"Up to 10 nodes in a cluster"),Object(l.b)("li",{parentName:"ol"},"Multi-AZ (min 3 nodes recommended for production use case)"),Object(l.b)("li",{parentName:"ol"},"Secure (in-flight, at-rest)")))),Object(l.b)("p",null,Object(l.b)("img",{alt:"Dynamo AWS",src:a(186).default})),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Changes in DynamoDB (CRUD) can end up in a stream as a changelog."),Object(l.b)("li",{parentName:"ol"},"This changelog can be fed to lambda, ES etc for analytics or other ops like welcome email."),Object(l.b)("li",{parentName:"ol"},"Could implement cross-region replication using streams."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"Must enable them manually!")),Object(l.b)("li",{parentName:"ol"},"24 hour data retention by default.")),Object(l.b)("p",null,Object(l.b)("img",{alt:"Dynamo AWS",src:a(187).default})),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"New features"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Transactions: All or nothing type ops (like in RDBMS)"),Object(l.b)("li",{parentName:"ol"},"On-demand: No capacity planning needed for WCU/RCU \u2014 scales automatically"),Object(l.b)("li",{parentName:"ol"},"2.5x more expensive than provisioned capacity"),Object(l.b)("li",{parentName:"ol"},"Helpful when you expect spikes"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Security"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"VPC endpoint to access without internet"),Object(l.b)("li",{parentName:"ol"},"Access fully controlled by IAM"),Object(l.b)("li",{parentName:"ol"},"Encryption at rest using KMS"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Backup"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Point-in-time like RDS"),Object(l.b)("li",{parentName:"ol"},"No performance impact"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("strong",{parentName:"p"},"Global tables")),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},Object(l.b)(c,{mdxType:"Quote"},"Multi-region, multi-master, active-active")),Object(l.b)("li",{parentName:"ol"},Object(l.b)(c,{mdxType:"Quote"},"Fully replicated, high performance")),Object(l.b)("li",{parentName:"ol"},"Must enable DynamoDB streams"),Object(l.b)("li",{parentName:"ol"},"Useful for low-latency, ",Object(l.b)("strong",{parentName:"li"},"DR purposes")," ")))),Object(l.b)("p",null,Object(l.b)("img",{alt:"Dynamo AWS",src:a(188).default})),Object(l.b)("p",null,Object(l.b)("img",{alt:"Dynamo AWS",src:a(189).default}),"\n7. Support for DMS (migration from Mongo, Oracle, SQL Server etc)\n8. Can launch local version for development"),Object(l.b)("h2",{id:"iii-dynamodb-for-sa"},"III. DynamoDB for SA"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Operations: Serverless so no ops"),Object(l.b)("li",{parentName:"ol"},"Security: Full security through IAM policies, KMS, SSL"),Object(l.b)("li",{parentName:"ol"},"Reliability: Multi AZ backups"),Object(l.b)("li",{parentName:"ol"},"Performance: Single-digit millisecond performance, DAX for caching reads, performance doesn't degrade if app scales"),Object(l.b)("li",{parentName:"ol"},"Cost: Pay per provisioned capacity and storage usage (no guessing, can use auto scaling)")),Object(l.b)("h2",{id:"iv-dynamodb-tips"},"IV. DynamoDB Tips"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Unlimited capacity, infinite horizontal scaling"),Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"No concept of read replicas in DynamoDB!")),Object(l.b)("li",{parentName:"ol"},"Not bound by db-engine limit like RDBMS do"),Object(l.b)("li",{parentName:"ol"},"Super low latency (sub-ms)"),Object(l.b)("li",{parentName:"ol"},"ACID compliant"),Object(l.b)("li",{parentName:"ol"},"Heavily used in gaming, shopping cart etc"),Object(l.b)("li",{parentName:"ol"},Object(l.b)("strong",{parentName:"li"},"Async replication")," (use Aurora for sync)"),Object(l.b)("li",{parentName:"ol"},"DynamoDB is eventually consistent by default but you can enforce strong consistency"),Object(l.b)("li",{parentName:"ol"},"Supports GET/PUT by a user-defined PK"),Object(l.b)("li",{parentName:"ol"},'To prevent "hot" partitions, you can create partition keys (PK) with high-cardinality attributes, which have a large number of distinct values for each item'),Object(l.b)("li",{parentName:"ol"},"The PK can be either a single-attribute partition key or a composite partition sort-key"),Object(l.b)("li",{parentName:"ol"},"Supports ",Object(l.b)("strong",{parentName:"li"},"Adaptive Capacity"),' where your "hot" partitions are ',Object(l.b)("strong",{parentName:"li"},"juiced up without being throttled")," to keep the throughput momentum going. ")),Object(l.b)("p",null,Object(l.b)("img",{alt:"Dynamo AWS",src:a(190).default})),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Supports both web and mobile platforms")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Optimize frequently made queries")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Min throughput = 1 RCU, 1 WCU")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Max throughput = unlimited")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"With point-in-time recovery, you can store data up to any point in last 35 days")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"DynamoDB best practices"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Keep item sizes small"),Object(l.b)("li",{parentName:"ol"},"If you are storing serial data in DynamoDB that will require actions based on data/time use separate tables for days, weeks, months"),Object(l.b)("li",{parentName:"ol"},"Store more frequently and less frequently accessed data in separate tables"),Object(l.b)("li",{parentName:"ol"},"If possible compress larger attribute values"),Object(l.b)("li",{parentName:"ol"},"Store objects larger than 400KB in S3 and use pointers (S3 Object ID) in DynamoDB"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Billing"),Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"RCU and WCU beyond free limit"),Object(l.b)("li",{parentName:"ol"},"Disk usage beyond first 25 GB/month"),Object(l.b)("li",{parentName:"ol"},"Global Tables"),Object(l.b)("li",{parentName:"ol"},"DAX")))),Object(l.b)("h2",{id:"rds-vs-dynamodb"},"RDS vs DynamoDB"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Item"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"RDS"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"DynamoDB"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Type"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Managed RDBMS"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Fully-managed NoSQL (no setup, admin work needed)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Storage"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"64 TB for Aurora, 16 TB otherwise"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Virtually unlimited")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Performance"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"General purpose storage is an SSD-backed storage option that delivers a  consistent baseline of 3 IOPS per provisioned GB with the ability to  burst up to 3000 IOPS.  Provisioned IOPS storage is an SSD-backed storage option designed to  deliver a consistent IOPS rate that you specify when creating a database  instance, up to 40,000 IOPS per database."),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sub-ms R/W performance, can handle more than 10 trillion requests per  day with peaks greater than 20 million requests per second. Petabytes of  storage. IT IS A BEAST!  DAX is cache for DynamoDB that can improve reads by 10x.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Availability"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Multi-AZ deployments synchronously replicates your data to a standby instance in a different AZ.  RDS will automatically switch over to standby in time of failure."),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Default replication across three AZs")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Scalability"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5 replicas in regular RDS and up to 15 in Aurora, manual scaling"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Unlimited capacity, AUTOMATIC infinite horizontal scaling")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Uses"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Traditional, ERP, CRM etc"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Internet-scale apps like gaming, mobile etc")))))}s.isMDXComponent=!0}}]);