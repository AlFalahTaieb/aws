(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{123:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var b=n.a.createContext({}),s=function(e){var t=n.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return n.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(a),d=r,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return a?n.a.createElement(m,o(o({ref:t},b),{},{components:a})):n.a.createElement(m,o({ref:t},b))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var b=2;b<i;b++)c[b]=a[b];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},195:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ec1-fb293bbb2026917d3b05e1d7a1b10fcc.png"},196:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ec2-6bbff7a4c51b85f9631d41045aaf6ab9.png"},197:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ec3-be3824be6f9877a2d5a161f553245cb2.png"},79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return l})),a.d(t,"Quote",(function(){return b})),a.d(t,"default",(function(){return p}));var r=a(2),n=a(6),i=(a(0),a(123)),c={id:"notes_ec",title:"ElastiCache",sidebar_label:"ElastiCache",author:"Taieb"},o={unversionedId:"notes_ec",id:"notes_ec",isDocsHomePage:!1,title:"ElastiCache",description:"export const Quote = ({ children, color }) => (",source:"@site/docs/notes_ec.mdx",slug:"/notes_ec",permalink:"/FAQ/docs/notes_ec",version:"current",sidebar_label:"ElastiCache",sidebar:"someSidebar",previous:{title:"Cognito",permalink:"/FAQ/docs/notes_cognito"},next:{title:"Route 53",permalink:"/FAQ/docs/notes_r53"}},l=[{value:"I. Introduction",id:"i-introduction",children:[]},{value:"II. Use cases",id:"ii-use-cases",children:[]},{value:"III. Redis vs MemcacheD",id:"iii-redis-vs-memcached",children:[]},{value:"IV. Security",id:"iv-security",children:[]},{value:"V. Patterns",id:"v-patterns",children:[]},{value:"VI. ElastiCache for SA",id:"vi-elasticache-for-sa",children:[]}],b=function(e){var t=e.children;e.color;return Object(i.b)("span",{style:{backgroundColor:"#5a5a5a",borderRadius:"8px",color:"#FF9900",padding:"0.21rem"}},t)},s={rightToc:l,Quote:b};function p(e){var t=e.components,c=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"i-introduction"},"I. Introduction"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Web service to deploy, operate and scale in-memory cache in the cloud.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Improves perf of web-based apps by reducing reads from disks.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Supports two caching engines")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"redis (advanced use case)")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"memcached (basic use case)")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Should be used along side read replicas to improve perf of an app.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Read scaling using read replicas.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Multi-AZ with failover capability.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"AWS takes care of OS, patching, optimizations and such."))),Object(i.b)("h2",{id:"ii-use-cases"},"II. Use cases"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Lazy loading")),Object(i.b)("p",null,Object(i.b)("img",{alt:"EC AWS",src:a(195).default})),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Shopping cart user session")),Object(i.b)("p",null,Object(i.b)("img",{alt:"EC AWS",src:a(196).default})),Object(i.b)("h2",{id:"iii-redis-vs-memcached"},"III. Redis vs MemcacheD"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Redis")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Multi-AZ with auto failover")),Object(i.b)("li",{parentName:"ol"},"Read replicas to scale reads and have HA"),Object(i.b)("li",{parentName:"ol"},"Data durability using AOF persistence"),Object(i.b)("li",{parentName:"ol"},"Backup and restore features"),Object(i.b)("li",{parentName:"ol"},"Used more like traditional db"),Object(i.b)("li",{parentName:"ol"},"Can be used for message queue as well"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Memcached")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"Multi-node for partitioning (sharding)"),Object(i.b)("li",{parentName:"ol"},"Non persistent"),Object(i.b)("li",{parentName:"ol"},"No backup"),Object(i.b)("li",{parentName:"ol"},"Multi-threaded architecture"),Object(i.b)("li",{parentName:"ol"},"Used solely for memcached")))),Object(i.b)("h2",{id:"iv-security"},"IV. Security"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"All caches in ElastiCache"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"Support SSL"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"No IAM auth")),Object(i.b)("li",{parentName:"ol"},"IAM policies on ElastiCache are only used for AWS API-level security"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Redis auth")),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},'You can set a "password/token" when you create a cluster')),Object(i.b)("li",{parentName:"ol"},"This is extra level of security for your cache (on top of security groups)"),Object(i.b)("li",{parentName:"ol"},"Forces user to enter credentials"),Object(i.b)("li",{parentName:"ol"},"Use HTTPS to enable in-transit encryption while the data is being replicated."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Memcached \u2014 supports SASL-based auth"))),Object(i.b)("h2",{id:"v-patterns"},"V. Patterns"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Lazy loading: all the read data is cached (can be stale)"),Object(i.b)("li",{parentName:"ol"},"Write through: adds/updates data in the cache when written to a db (no stale data)"),Object(i.b)("li",{parentName:"ol"},"Session store: store temporary session data in cache (using TTL features)")),Object(i.b)("h2",{id:"vi-elasticache-for-sa"},"VI. ElastiCache for SA"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Operations: same as RDS"),Object(i.b)("li",{parentName:"ol"},"Security: AWS responsible for OS security, we are responsible for user auth and encryption"),Object(i.b)("li",{parentName:"ol"},"Reliability: Clustering, multi-AZ"),Object(i.b)("li",{parentName:"ol"},"Performance: Sub-millisecond performance, in-memory, read-replicas for sharding"),Object(i.b)("li",{parentName:"ol"},"Cost: Pay per hour based on EC2 and storage usage"),Object(i.b)("li",{parentName:"ol"},"Below is a fully-functional 3-tier architecture with different caches ")),Object(i.b)("p",null,Object(i.b)("img",{alt:"EC AWS",src:a(197).default})))}p.isMDXComponent=!0}}]);