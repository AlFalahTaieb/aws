(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{123:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(f,i(i({ref:t},s),{},{components:n})):a.a.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"Highlight",(function(){return s})),n.d(t,"Quote",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(123)),c={id:"notes_cli_sdk",title:"CLI & SDK",sidebar_label:"CLI & SDK"},i={unversionedId:"notes_cli_sdk",id:"notes_cli_sdk",isDocsHomePage:!1,title:"CLI & SDK",description:"export const Highlight = ({ children, color }) => (",source:"@site/docs/notes_cli_sdk.mdx",slug:"/notes_cli_sdk",permalink:"/aws/docs/notes_cli_sdk",version:"current",sidebar_label:"CLI & SDK",sidebar:"someSidebar",previous:{title:"DataSync",permalink:"/aws/docs/notes_datasync"},next:{title:"RDS",permalink:"/aws/docs/notes_rds"}},l=[],s=function(e){var t=e.children;e.color;return Object(o.b)("span",{style:{backgroundColor:"#FF9900",borderRadius:"5px",color:"#fff",padding:"0.1rem"}},t)},p=function(e){var t=e.children;e.color;return Object(o.b)("span",{style:{backgroundColor:"#5a5a5a",borderRadius:"7px",color:"#FF9900",padding:"0.3rem"}},t)},u={rightToc:l,Highlight:s,Quote:p};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Never ever share your access key and code with others.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Never ever use your personal credentials on EC2, create another IAM user instead."))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"# Configure AWS\n# This would create ~/.ssh with details\n$ aws configure\n\n# Configure AWS for a profile\n$ aws configure --profile devdude\n\n# S3 commands\n$ aws s3 ls\n$ aws s3 ls s3://mybucket\n$ aws s3 mb s3://mynewbucket\n$ aws s3 ls --profile devdude # using a profile\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"You can fetch metadata about an EC2 from ",Object(o.b)("inlineCode",{parentName:"p"},"http://169.254.169.254/latest/meta-data"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"If you don't specify a region, the SDKs would default to ",Object(o.b)("inlineCode",{parentName:"p"},"us-east-1"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"It's recommended to use default credential provider chain.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Any API that fails because of too many calls need to be retried with ",Object(o.b)("strong",{parentName:"p"},"Exponential Backoff"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"These apply to rate-limited API and the retry mechanism is included in SDK API calls."))))}b.isMDXComponent=!0}}]);