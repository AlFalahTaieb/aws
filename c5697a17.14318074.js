(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{109:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"Quote",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(2),i=a(6),r=(a(0),a(123)),o={id:"notes_vpc",title:"VPC",sidebar_label:"VPC",author:"Taieb"},l={unversionedId:"notes_vpc",id:"notes_vpc",isDocsHomePage:!1,title:"VPC",description:"export const Quote = ({ children, color }) => (",source:"@site/docs/notes_vpc.mdx",slug:"/notes_vpc",permalink:"/FAQ/docs/notes_vpc",version:"current",sidebar_label:"VPC",sidebar:"someSidebar",previous:{title:"Shield & WAF",permalink:"/FAQ/docs/notes_sw"},next:{title:"ECS",permalink:"/FAQ/docs/notes_ecs"}},c=[{value:"I. Introduction",id:"i-introduction",children:[]},{value:"II. Creating a VPC",id:"ii-creating-a-vpc",children:[]},{value:"III. Peering (Do this after section XV)",id:"iii-peering-do-this-after-section-xv",children:[]},{value:"IV. Default VPC Walkthrough",id:"iv-default-vpc-walkthrough",children:[]},{value:"V. VPC in AWS",id:"v-vpc-in-aws",children:[]},{value:"VI. Internet Gateways (IGW aka Modem)",id:"vi-internet-gateways-igw-aka-modem",children:[]},{value:"VII. NAT Instances (Outdated)",id:"vii-nat-instances-outdated",children:[]},{value:"IX. NAT Gateways (New)",id:"ix-nat-gateways-new",children:[]},{value:"X. DNS resolution in VPC",id:"x-dns-resolution-in-vpc",children:[]},{value:"XI. Network ACL and Security Group",id:"xi-network-acl-and-security-group",children:[]},{value:"XII. VPC Endpoints",id:"xii-vpc-endpoints",children:[]},{value:"XIII. VPC Flow Logs",id:"xiii-vpc-flow-logs",children:[]},{value:"XIV. Bastion hosts",id:"xiv-bastion-hosts",children:[]},{value:"XV. Virtual Private Gateway (aka AWS VPN)",id:"xv-virtual-private-gateway-aka-aws-vpn",children:[]},{value:"XVI. Direct Connect (DX)",id:"xvi-direct-connect-dx",children:[]},{value:"XVII. Egress only IGW",id:"xvii-egress-only-igw",children:[]},{value:"XVIII. AWS PrivateLink",id:"xviii-aws-privatelink",children:[]},{value:"XIX. EC2 Classic and AWS ClassicLink (deprecated)",id:"xix-ec2-classic-and-aws-classiclink-deprecated",children:[]},{value:"XX. VPN CloudHub",id:"xx-vpn-cloudhub",children:[]},{value:"XXI. Transit Gateway",id:"xxi-transit-gateway",children:[]},{value:"XXII. Networking cost in AWS per GB",id:"xxii-networking-cost-in-aws-per-gb",children:[]},{value:"XXIII. Subnets",id:"xxiii-subnets",children:[]},{value:"XXV. VPC Tips",id:"xxv-vpc-tips",children:[]},{value:"Resources",id:"resources",children:[]}],b=function(e){var t=e.children;e.color;return Object(r.b)("span",{style:{backgroundColor:"#5a5a5a",borderRadius:"8px",color:"#FF9900",padding:"0.21rem"}},t)},s={rightToc:c,Quote:b};function p(e){var t=e.components,o=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"i-introduction"},"I. Introduction"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"VPC lets you provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. It provides complete control over networking environment, including selection of your own IP address range, creation of subnets and configuration of route tables and network gateways.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Uses of VPC"))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Launch instances into a subnet of your choosing"),Object(r.b)("li",{parentName:"ul"},"Assign custom IP address ranges in each subnet"),Object(r.b)("li",{parentName:"ul"},"Configure route tables between subnets"),Object(r.b)("li",{parentName:"ul"},"Create internet gateway and attach it to your VPC"),Object(r.b)("li",{parentName:"ul"},"Much better security control over your AWS resources"),Object(r.b)("li",{parentName:"ul"},"Instance security groups"),Object(r.b)("li",{parentName:"ul"},"Subnet ACLs")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Default VPC is user-friendly, allowing you to immediately deploy instances. ")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"All subnets in default VPC have a route out to the internet."))),Object(r.b)("h2",{id:"ii-creating-a-vpc"},"II. Creating a VPC"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"When you create a VPC, a route table, network ACL and security group is created by default. You have to create subnet manually. If you don't specify a different security group when you launch the instance, AWS associates the default security group with your instance.")),Object(r.b)("li",{parentName:"ol"},"AWS reserves five addresses for its own us while creating a VPC."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"10.0.0.0/16")," is the biggest CIDR block allowed."),Object(r.b)("li",{parentName:"ol"},"Only one internet gateway (IGW) per VPC."),Object(r.b)("li",{parentName:"ol"},"Keep your main route table private.")),Object(r.b)("h2",{id:"iii-peering-do-this-after-section-xv"},"III. Peering (Do this after section XV)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Allows you to connect one VPC with another via a direct network route using private IP addresses."),Object(r.b)("li",{parentName:"ol"},"The two VPCs must have non-overlapping CIDRs."),Object(r.b)("li",{parentName:"ol"},"No bandwidth bottlenecks, traffic always stays on global AWS backbone."),Object(r.b)("li",{parentName:"ol"},"Instances behave as if they were on the same private network."),Object(r.b)("li",{parentName:"ol"},"You can peer VPC with other AWS accounts as well as with other VPCs in the same account."),Object(r.b)("li",{parentName:"ol"},"No transitive peering. "),Object(r.b)("li",{parentName:"ol"},"You can peer between regions."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"You must update route tables in each VPC's subnet")," to ensure instances can communicate. ")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(250).default})),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(251).default})),Object(r.b)("h2",{id:"iv-default-vpc-walkthrough"},"IV. Default VPC Walkthrough"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"All new accounts have a default VPC."),Object(r.b)("li",{parentName:"ol"},"New instances are launched into default VPC if no subnet is specified."),Object(r.b)("li",{parentName:"ol"},"Default VPC have internet connectivity and all instances have public IP."),Object(r.b)("li",{parentName:"ol"},"We also get a public and a private DNS name.")),Object(r.b)("h2",{id:"v-vpc-in-aws"},"V. VPC in AWS"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You can have multiple VPCs in a region (max 5 per region \u2014 soft limit).")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Max CIDR per VPC is 5. For each CIDR"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Min size is /28 = 16 IPs"),Object(r.b)("li",{parentName:"ol"},"Max size is /16 = 65536 IPs"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Because VPC is private, only the private IP ranges are allowed."),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"10.0.0.0 - 10.255.255.255 (or 10.0.0.0/8)   "),Object(r.b)("li",{parentName:"ol"},"172.16.0.0 - 172.31.255.255 (172.16.0.0/12)"),Object(r.b)("li",{parentName:"ol"},"192.168.0.0 - 192.168.255.255 (192.168.0.0/16)"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Your VPC CIDR should not overlap with your other networks e.g. corporate")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"The public subnet CIDR is smaller because it only includes ELB/ALB whereas the private subnet includes all our services.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Every time you create a subnet, you are going to lose 5 IPs as AWS reserves them for its own purposes (first four and last one)."),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"10.0.0.0 \u2192 Network address"),Object(r.b)("li",{parentName:"ol"},"10.0.0.1 \u2192 VPC router"),Object(r.b)("li",{parentName:"ol"},"10.0.0.2 \u2192 Mapping to AWS-provided DNS"),Object(r.b)("li",{parentName:"ol"},"10.0.0.3 \u2192 Reserved for future use"),Object(r.b)("li",{parentName:"ol"},"10.0.0.255 \u2192 Usually the network broadcast address but AWS doesn't provide that"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"For instance, if you need 29 IPs then you can't use /27 subnet mask."))),Object(r.b)("h2",{id:"vi-internet-gateways-igw-aka-modem"},"VI. Internet Gateways (IGW aka Modem)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"IGW help our VPC instance connect to the internet."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"It scales horizontally and is both HA and redundant.")),Object(r.b)("li",{parentName:"ol"},"Must be created separately from VPC."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Unlimited bandwidth!")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"One VPC can only be attached to one IGW and vice versa.")),Object(r.b)("li",{parentName:"ol"},"IGW is also a NAT for the instances that have a public IPv4."),Object(r.b)("li",{parentName:"ol"},"IGW on their own do not allow internet access, route table must be edited as well."),Object(r.b)("li",{parentName:"ol"},"Route Table (aka Router)",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"A set of rules (called routes) to determine where the network traffic is directed."),Object(r.b)("li",{parentName:"ol"},"Default VPC comes with a route table."),Object(r.b)("li",{parentName:"ol"},"Can have multiple active route tables in a VPC."),Object(r.b)("li",{parentName:"ol"},"Cannot delete a route table if it has dependencies (associated subnets)")))),Object(r.b)("h2",{id:"vii-nat-instances-outdated"},"VII. NAT Instances (Outdated)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Allows instances in the private subnets to connect to the internet."),Object(r.b)("li",{parentName:"ol"},"Must be launched in the public subnet."),Object(r.b)("li",{parentName:"ol"},"Must disable EC2 flag: Source/Destination check"),Object(r.b)("li",{parentName:"ol"},"Must have elastic IP attached to it"),Object(r.b)("li",{parentName:"ol"},"Route table must be configured to route traffic from private subnets to NAT instance")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(252).default})),Object(r.b)("h2",{id:"ix-nat-gateways-new"},"IX. NAT Gateways (New)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"New way, AWS-managed NAT"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Limited bandwidth, up to 45 Gbps")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Can scale across a single AZ")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Higher throughput, high availability, no admin needed")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"NAT is created in a specific AZ, uses elastic IP")),Object(r.b)("li",{parentName:"ol"},"Pay by the hour for usage"),Object(r.b)("li",{parentName:"ol"},"Cannot be used by an instance in the same subnet (only from other subnets)"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Requires an IGW (Private subnet (Route Table) \u2192 NAT \u2192 IGW)")),Object(r.b)("li",{parentName:"ol"},"5 Gbps of bandwidth with auto scaling to 45Gbps"),Object(r.b)("li",{parentName:"ol"},"No security group to manage"),Object(r.b)("li",{parentName:"ol"},"NAT Gateway is resilient within a single AZ. Must create multiple gateways in multiple AZs for fault tolerance. ")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(253).default})),Object(r.b)("h2",{id:"x-dns-resolution-in-vpc"},"X. DNS resolution in VPC"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"DNS resolution setting \u2192 ",Object(r.b)("inlineCode",{parentName:"p"},"enableDnsSupport")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"True by default"),Object(r.b)("li",{parentName:"ol"},"Helps decide if DNS resolution is supported for the VPC"),Object(r.b)("li",{parentName:"ol"},"If True, queries the AWS DNS server at 169.254.169.253"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"DNS hostname setting \u2192 ",Object(r.b)("inlineCode",{parentName:"p"},"enableDnsHostname")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"False by default for newly created VPC"),Object(r.b)("li",{parentName:"ol"},"True by default for default VPC"),Object(r.b)("li",{parentName:"ol"},"Won't do anything unless ",Object(r.b)("inlineCode",{parentName:"li"},"enableDnsSupport")," = True"),Object(r.b)("li",{parentName:"ol"},"If True, assign public hostname to EC2 instance if it has a public IP"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"If you use custom DNS domain name in a private zone in Route 53, you must set both of the above attributes true. "))),Object(r.b)("h2",{id:"xi-network-acl-and-security-group"},"XI. Network ACL and Security Group"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"ACL = Firewall for subnet"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Security Group = Firewall for EC2 instance"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Default NACL allows everything outbound and everything inbound."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"One NACL per subnet, new subnets are assigned the default NACL.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"ACL:Subnet = 1:Many")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Define NACL rules"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Rules have a number (1-32766)"),Object(r.b)("li",{parentName:"ol"},"Lower number = Higher precedence"),Object(r.b)("li",{parentName:"ol"},"AWS recommends adding rule in steps of 100"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Newly created NACL will deny everything (inbound and outbound)."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Network ACL Rules are evaluated by rule number, ",Object(r.b)("strong",{parentName:"p"},"from lowest to highest, and executed immediately")," when a matching allow/deny rule is found.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"NACL are a great way of blocking a specific IP at the subnet level."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Ephemeral ports: In practice, to cover the different types of clients that might initiate traffic to public-facing instances in your VPC, you can open ephemeral ports (1024 - 65535). "))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(254).default})),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(255).default})),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(256).default})),Object(r.b)("ol",{start:8},Object(r.b)("li",{parentName:"ol"},"You can daisy chain security groups")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(257).default})),Object(r.b)("h2",{id:"xii-vpc-endpoints"},"XII. VPC Endpoints"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"VPC endpoints allow you to connect to AWS services using a private network instead of going the public network route (igw).")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"They scale horizontally and are redundant.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"They remove the need of IGW, NAT etc to access AWS services.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Interface endpoint")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Provisions an ENI")," (private IP address) as an entry point (must attach security group) \u2014 most AWS services"),Object(r.b)("li",{parentName:"ol"},"Endpoints do not support endpoint policies"),Object(r.b)("li",{parentName:"ol"},"Can be accessed through AWS VPN or AWS DX"),Object(r.b)("li",{parentName:"ol"},"IPv4 traffic only"),Object(r.b)("li",{parentName:"ol"},"Same region only"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Gateway endpoint")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Provisions a target and must be used in a route table")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"S3 and DynamoDB")," are the two services have a Gateway endpoint, all the other ones have an interface endpoint (powered by PrivateLink - means a private IP)"),Object(r.b)("li",{parentName:"ol"},"Uses route table entry for the endpoint and igw"),Object(r.b)("li",{parentName:"ol"},"IPv4 traffic only"),Object(r.b)("li",{parentName:"ol"},"Same region only"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In case of issues"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Check DNS setting resolution in your VPC"),Object(r.b)("li",{parentName:"ol"},"Check route tables "),Object(r.b)("li",{parentName:"ol"},"CLI is in correct region")))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(258).default})),Object(r.b)("h2",{id:"xiii-vpc-flow-logs"},"XIII. VPC Flow Logs"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Capture information about IP traffic going into your interfaces (",Object(r.b)("strong",{parentName:"p"},"like Wireshark"),")"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"VPC flow logs"),Object(r.b)("li",{parentName:"ol"},"Subnet flow logs"),Object(r.b)("li",{parentName:"ol"},"Elastic Network Interface (ENI) logs"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Helps monitor and troubleshoot connectivity issues.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Flow logs data can go directly to S3 or CloudWatch logs."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Can be consumed by GuardDuty for threat detection")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Captures network information from AWS managed interfaces too e.g. ELB, RDS etc ")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Flow log syntax"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"srcaddr"),", ",Object(r.b)("inlineCode",{parentName:"li"},"dstaddr"),": help identify problematic IP"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"srcport"),", ",Object(r.b)("inlineCode",{parentName:"li"},"dstport"),": help identify problematic ports"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"Action"),": success or failure of the request due to SG/ACL"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Can be used for analytics on usage patterns or malicious behavior")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Query VPC flow logs using Athena on S3 or CloudWatch logs insights")))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(259).default})),Object(r.b)("h2",{id:"xiv-bastion-hosts"},"XIV. Bastion hosts"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"We can use a bastion host to SSH into our private instances."),Object(r.b)("li",{parentName:"ol"},"The bastion is in the public subnet which in turn is connected to all other private subnets."),Object(r.b)("li",{parentName:"ol"},"Bastion host security group must be tightened."),Object(r.b)("li",{parentName:"ol"},"Exam tip: Make sure the bastion host only has port 22 traffic form the IP you need, not form the security groups of other instances."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Create a small EC2 instance")," with a security group which only allows access on port 22 via the IP address of the corporate data center. Use a private key (",Object(r.b)("inlineCode",{parentName:"li"},".pem"),") file to connect to the bastion host."),Object(r.b)("li",{parentName:"ol"},"You don't need a large EC2 instance for a bastion host as it does not require much CPU resources.")),Object(r.b)("h2",{id:"xv-virtual-private-gateway-aka-aws-vpn"},"XV. Virtual Private Gateway (aka AWS VPN)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"A Virtual Private Gateway (VPG) is a logical, fully redundant distributed edge routing function that sits at the edge of your VPC."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"You must create a VPG in your VPC before you can establish an AWS Managed site-to-site VPN connection.")," The other end of the connection is the customer gateway which must be established on the customer side of the connection. ")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(260).default})),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"AWS side"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"VPN concentrator on the AWS side of the VPN connection."),Object(r.b)("li",{parentName:"ol"},"VGW is created and attached to the VPC from which you want to create the site-to-site VPN connection."),Object(r.b)("li",{parentName:"ol"},"Possibility to customize the ASN."),Object(r.b)("li",{parentName:"ol"},"Runs at 1.25GB/s"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Customer Gateway"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Software or hardware device on customer side of VPN connection"),Object(r.b)("li",{parentName:"ol"},"IP address",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Use static, internet-routable IP address for your customer gateway device."),Object(r.b)("li",{parentName:"ol"},"If behind a CGW behind NAT (with NAT-T), use the public IP of the NAT ")))))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(261).default})),Object(r.b)("h2",{id:"xvi-direct-connect-dx"},"XVI. Direct Connect (DX)"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Provides a dedicated ",Object(r.b)("strong",{parentName:"li"},"private connection")," from a remote network (corporate datacenter) to your VPC."),Object(r.b)("li",{parentName:"ol"},"Dedicated connections must be setup between your DC and AWS Direct Connect locations."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"You still need to setup a VPG on your side on the VPC.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"There is no option to enable IPSec encryption on the Direct Connect connection.")),Object(r.b)("li",{parentName:"ol"},"Access public resources (S3) and private (EC2) on same connection."),Object(r.b)("li",{parentName:"ol"},"Supports both IPv4 and IPv6."),Object(r.b)("li",{parentName:"ol"},"Reduce data transfer cost."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Provide backup and add resilience to existing DX \u2192 Implement IPSec VPN connection using the same BGP")),Object(r.b)("li",{parentName:"ol"},"DX + VPN = IPSec enabled"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Continually transfer large data sets (to S3) using DataSync")),Object(r.b)("li",{parentName:"ol"},"Network performance and predictability"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Data in-transit is not encrypted like in VGW because it traverses public internet")),Object(r.b)("li",{parentName:"ol"},"Compliance and security"),Object(r.b)("li",{parentName:"ol"},"Use cases",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Increase bandwidth throughput \u2014 working with large data sets \u2014 lower cost"),Object(r.b)("li",{parentName:"ol"},"More consistent network experience \u2014 apps using real-time data feeds"),Object(r.b)("li",{parentName:"ol"},"Hybrid envs (on prem + cloud) ")))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(262).default})),Object(r.b)("ol",{start:15},Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"If you want to connect to multiple DX-VPC groups at once, you can use the Direct Connect Gateway. It is the perfect solution to link your physical office with multi-region VPCs.")),Object(r.b)("li",{parentName:"ol"},"The connecting VPCs must not have overlapping CIDRs.")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(263).default}),"\n",Object(r.b)("img",{alt:"VPC AWS",src:a(264).default}),"\n",Object(r.b)("img",{alt:"VPC AWS",src:a(265).default})),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"11. Types of Direct Connect")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Dedicated connection: 1Gbps or 10Gbps"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Physical ethernet port dedicated to a customer"),Object(r.b)("li",{parentName:"ol"},"Request made to AWS first, then completed by AWS Direct Connect partners"),Object(r.b)("li",{parentName:"ol"},"Might take long because AWS has to expose a port for you"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Hosted connection: 50Mbps, 500Mbps, 10Gbps"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Connection requests are made via AWS Direct Connect partners"),Object(r.b)("li",{parentName:"ol"},"Capacity can be added or removed on-demand"),Object(r.b)("li",{parentName:"ol"},"1, 2, 5, 10 Gbps available at select AWS Direct Connect partners")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"12. Lead times are often 1 month+ to establish a new connection.")),Object(r.b)("ol",{start:13},Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Data in transit is not encrypted but is private.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Good for an extra level of security but slightly more complex to put in place. "))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(266).default})),Object(r.b)("h2",{id:"xvii-egress-only-igw"},"XVII. Egress only IGW"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"This is a NAT counterpart in IPv6."),Object(r.b)("li",{parentName:"ol"},"In IPv6, all IPs are public by default. There's no concept of private IPs. Thus, all IPs are publicly accessible."),Object(r.b)("li",{parentName:"ol"},"Egress-only-IGW gives our IPs access to internet but they won't be directly reachable by internet. This sort of mimics the private IPs in IPv4."),Object(r.b)("li",{parentName:"ol"},"You must edit the route tables after creating the egress.")),Object(r.b)("h2",{id:"xviii-aws-privatelink"},"XVIII. AWS PrivateLink"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Also known as Endpoint Service (where you are the service provider)")),Object(r.b)("li",{parentName:"ol"},"Problem: We have an app on our VPC that we want to expose to other VPCs."),Object(r.b)("li",{parentName:"ol"},"Possible solutions \u2014 1) Make it public or 2) VPC peering (image below)")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(267).default})),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"AWS solves this problem by PrivateLink \u2014 you can expose a service to 1000s of VPC (your or other account) securely.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Does not require VPC peering, IGW, NAT etc. Better when you have a public facing (DNS hostname enabled) app that you want to share with world. If all you want is to talk between private VPCs over AWS backbone, use TGW or Peering."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"5. It requires a Network Load Balancer (NLB) on the app VPC and ENI on the user VPC")),Object(r.b)("ol",{start:6},Object(r.b)("li",{parentName:"ol"},"If the NLB and ENI are in multiple AZs, then the solution is fault-tolerant")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"7. Supports both inter and intra region connections!")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(268).default})),Object(r.b)("h2",{id:"xix-ec2-classic-and-aws-classiclink-deprecated"},"XIX. EC2 Classic and AWS ClassicLink (deprecated)"),Object(r.b)("p",null,"Previously, EC2 instances used to run on a single network which was shared with other customers. Then came VPC that made logical isolation of services within accounts. "),Object(r.b)("p",null,"AWS Classic Link is a way of connecting Classic EC2s to VPC in your account."),Object(r.b)("h2",{id:"xx-vpn-cloudhub"},"XX. VPN CloudHub"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Provides ",Object(r.b)("strong",{parentName:"li"},"secure")," communication between sites if you have multiple VPN connections."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Low cost hub and spoke model for primary or secondary connectivity between locations.")),Object(r.b)("li",{parentName:"ol"},"It's a VPN connection so it ",Object(r.b)("strong",{parentName:"li"},"goes over public internet"),".")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(269).default})),Object(r.b)("h2",{id:"xxi-transit-gateway"},"XXI. Transit Gateway"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Better than peering if you have a lot of VPCs")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"With AWS Transit Gateway, you only have to create and manage a single connection from the central gateway to each Amazon VPC, on-premises data center, or remote office across your network.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"It acts as a ",Object(r.b)("strong",{parentName:"p"},"regional virtual router")," for traffic flowing between your virtual private clouds (VPC) and VPN connections. A transit gateway scales elastically based on the volume of network traffic.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Routing through a transit gateway operates at layer 3, where the packets are sent to a specific next-hop attachment, based on their destination IP addresses.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"A transit gateway attachment is both a source and a destination of packets. You can attach the following resources to your transit gateway:"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"One or more VPCs"),Object(r.b)("li",{parentName:"ol"},"One or more VPN connections"),Object(r.b)("li",{parentName:"ol"},"One or more AWS Direct Connect gateways"),Object(r.b)("li",{parentName:"ol"},"One or more transit gateway peering connections"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"The AWS network topology can get very complex as number of devices/VPC grow.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Transit Gateway is a star connector to simplify all VPCs, Direct Links, on-prem servers that provide a transitive way of connection."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Regional resource, can work cross-region"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Share cross-account using Resource Access Manager (RAM)"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You can peer transit gateways across regions")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Route Tables: limit which VPC can talk to which ones")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Works with Direct Connect Gateway, VPN connections")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Supports IP Multicast (only AWS service to do so) "))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(270).default}),"\n",Object(r.b)("img",{alt:"VPC AWS",src:a(271).default}),"\n",Object(r.b)("img",{alt:"VPC AWS",src:a(272).default})),Object(r.b)("h2",{id:"xxii-networking-cost-in-aws-per-gb"},"XXII. Networking cost in AWS per GB"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Use private IP for talking between EC2 instances within the same region (different AZ)."),Object(r.b)("li",{parentName:"ol"},"Try using same AZ for max savings (compromise HA) e.g. create read-replicas in same AZ.")),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(273).default})),Object(r.b)("h2",{id:"xxiii-subnets"},"XXIII. Subnets"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},'A "default subnet" of your VPC is actually a public subnet, because the main route table sends the subnet\'s traffic that is destined for the internet to the internet gateway.'))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"You can make a default subnet into a private subnet by removing the route from the destination 0.0.0.0/0 to the internet gateway. However, if you do this, any EC2 instance running in that subnet can't access the internet."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Instances that you launch into a default subnet receive both a public IPv4 address and a private IPv4 address, and both public and private DNS hostnames.")," Instances that you launch into a non-default subnet in a default VPC don't receive a public IPv4 address or a DNS hostname. You can change your subnet's default public IP addressing behavior")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Non-default subnets have the IPv4 public addressing attribute set to ",Object(r.b)("inlineCode",{parentName:"p"},"false"),", and default subnets have this attribute set to ",Object(r.b)("inlineCode",{parentName:"p"},"true"),".")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Route table:Subnet = 1:Many"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You cannot delete the main route table but replace it with another one.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Route tables use ",Object(r.b)("inlineCode",{parentName:"strong"},"LongestPrefixMatch")," to direct traffic."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Each subnet in your VPC must be associated with a route table, which controls the routing for the subnet (subnet route table). You can explicitly associate a subnet with a particular route table. Otherwise, the subnet is implicitly associated with the main route table.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"A subnet can only be associated with one route table at a time"),", but you can associate multiple subnets with the same subnet route table.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"You can optionally associate a route table with an internet gateway or a virtual private gateway (gateway route table)"),". This enables you to specify routing rules for inbound traffic that enters your VPC through the gateway")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"ELB nodes have public IPs and route traffic to the private IP addresses of the EC2 instances. You need one public subnet in each AZ where the ELB is defined and the private subnets are located.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In a default VPC, instances will be assigned a public and private DNS hostname. In a non-default VPC, instances will be assigned a private but not a public DNS hostname.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You can do the following to provide a highly available, fault-tolerant network connection"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Establish a hardware VPN over the Internet between the VPC and the on-premises network."),Object(r.b)("li",{parentName:"ol"},"Establish another AWS Direct Connect connection and private virtual interface in the same AWS region."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Security Groups do a UNION of all rules."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"To access an instance on public subnet (incoming)")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"An Internet Gateway attached to the VPC and route table attached to the public subnet pointing to it"),Object(r.b)("li",{parentName:"ol"},"A ",Object(r.b)("strong",{parentName:"li"},"Public or Elastic IP")," address on the EC2 instance"),Object(r.b)("li",{parentName:"ol"},"Subnet route table updated to point to the Internet Gateway"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"NAT Gateway is not needed!")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Security groups and ACLs must be configured to allow the SSH traffic on port 22")))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"EC2 to internet (outgoing)")),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"EC2 in private subnet"),Object(r.b)("li",{parentName:"ol"},"NAT Gateway"),Object(r.b)("li",{parentName:"ol"},"NAT Gateway attached to IGW with corresponding route table entry")),Object(r.b)("hr",{parentName:"li"})),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"To connect a physical datacenter to multiple VPCs"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Create a Direct Connect connection to the closest region"),Object(r.b)("li",{parentName:"ol"},"Create a Direct Connect Gateway and connect rest of the VPCs"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"To create a VPN connection, you must create a customer gateway resource in AWS, which provides information to AWS about your customer gateway device. A customer gateway is a physical device or software application on your side of the VPN connection. Next, you have to set up an Internet-routable IP address (static) of the customer gateway's external interface. You set up the routing so that any traffic from the VPC bound for your network is routed to the virtual private gateway."))),Object(r.b)("p",null,Object(r.b)("img",{alt:"VPC AWS",src:a(274).default})),Object(r.b)("ol",{start:8},Object(r.b)("li",{parentName:"ol"},"You can connect EC2 instances (in private subnet) to an ELB (in public subnet) to allow incoming connection. ")),Object(r.b)("h2",{id:"xxv-vpc-tips"},"XXV. VPC Tips"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Launching an EC2 in a VPC ensures that the static private IP assigned to the instance does not change even after restart."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"VPN = Virtual Private Gateway + Customer Gateway")),Object(r.b)("li",{parentName:"ol"},"AWS site-to-site VPN connections can be moved from a VPG to Transit Gateway without having to make changes on customer side."),Object(r.b)("li",{parentName:"ol"},"If your VPN device supports BGP, specify ",Object(r.b)("strong",{parentName:"li"},"dynamic")," routing when you configure your VPN else put ",Object(r.b)("strong",{parentName:"li"},"static")," routing."),Object(r.b)("li",{parentName:"ol"},"You are charged for ",Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"VPN connection-hour"),Object(r.b)("li",{parentName:"ol"},"NAT Gateway-hour"),Object(r.b)("li",{parentName:"ol"},"Data in/out"),Object(r.b)("li",{parentName:"ol"},"Unused or inactive elastic IPs")))),Object(r.b)("h2",{id:"resources"},"Resources"),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"notes_vpc_r1"}),"Creating a VPC")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"notes_vpc_n"}),"Networking")))}p.isMDXComponent=!0},123:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var b=i.a.createContext({}),s=function(e){var t=i.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return a?i.a.createElement(d,l(l({ref:t},b),{},{components:a})):i.a.createElement(d,l({ref:t},b))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var b=2;b<r;b++)o[b]=a[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},250:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc-15ed5c2d67a28b66d1b3438224cf3e68.png"},251:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc1-d816ddf2a19c628f9c64173a62806921.png"},252:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc2-ce9548b74f8c41c833dad730678a970d.png"},253:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc3-9e513849841191a2f766646d9bb175b4.png"},254:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc4-cd236dc6601d3c5a77f62e9b89ceec6d.png"},255:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc5-df8570306c34fa6fafd89b413ace4aec.png"},256:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc6-1be462d54c416e395dae99ec1b9ba07a.png"},257:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc7-43a28724eba50352b5c98aefb7738b94.png"},258:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc8-5d217d9adc2313c4d8b3845cb5551dd0.png"},259:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc9-7f6bac34fcc8e26b6d810451e16fd5b0.png"},260:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/voc10-ed35bcd0988927c27ed182f0f6a46282.png"},261:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc11-318d648fc63c68cde6e029962b12294e.png"},262:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc12-7f9fcc5d229e1f79e7d618669520fa57.png"},263:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc13-712c546990e45bd46c8c5569da423b25.png"},264:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc14-c7a181b2383fed9944e44b8adefa6b8f.png"},265:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc15-51b7089b2797737e5642ca677de11810.png"},266:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc16-0dbd3e7d0198196508a9ecae847acd53.png"},267:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc17-a62b26fe516e5cec4d0dc5457d03aa3e.png"},268:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc18-2ace515c00628665bff2f59b34eff6b9.png"},269:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc19-47532f02848964a833ab3c423d2a17c7.png"},270:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc20-77847d93428c3715435d55d210351eb1.png"},271:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc21-136edab0d533159adbe406004568d2a2.png"},272:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc22-6e1c2bbe9fc7c4cffca246346dd1bfda.png"},273:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc23-7bcc1a5441528619201c2c4d2df4c3af.png"},274:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/vpc24-ebb63cf838689bc663e5e238087eced4.png"}}]);